//O(N^2)
/*class Solution {
    public int[] twoSum(int[] nums, int target) {
        int []result = new int[2];
        for (int i=0;i<nums.length-1;i++){
            for (int j=i+1;j<nums.length;j++) {
                if ((nums[i] + nums[j]) == target){
                    result[0] = i;
                    result[1] = j;
            }
            else
                continue;
        }
            }
           
        return result;
    }
}*/

//O(N) O(N)
class Solution {
    public int[] twoSum(int[] nums, int target) {
        int []result = new int[2];
           HashMap<Integer,Integer> hm = new HashMap();
           for(int i=0;i<nums.length;i++){ 
               if(hm.containsKey(target - nums[i])){
                   result[1] = i;
                   result[0] = hm.get(target-nums[i]);
                   break;
               }else {
                   hm.put(nums[i],i);
               }
           }
        return result;
    }
}
